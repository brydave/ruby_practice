# multiples of 3 and 5

# If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
# Find the sum of all the multiples of 3 or 5 below 1000.


def multipleSum(num1)
  sumArray = []

  num1.times do |i|
    if (i % 3) == 0
      sumArray.push(i)
      i = i - 1
    elsif (i % 5) == 0
      sumArray.push(i)
      i = i - 1 
    else
      i = i -1
    end
  end

  a = sumArray.inject(:+)

  puts a.to_s

end


multipleSum(1000)


# Even Fibonacci 
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def evenFibs(num2)
  sumArray = []
  fib_index = 3
  a, b = 1, 1

  # push Fibonacci to array 
  while fib_index <= num2
    c = a + b
    a = b
    b = c
    fib_index += 1

    if ((c % 2) == 0)
      sumArray.push c
    end
  end

  d = sumArray.inject(:+)

  puts d.to_s

end

evenFibs(100000)







